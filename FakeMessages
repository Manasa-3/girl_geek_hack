import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;

public class MainActivity extends AppCompatActivity {

    private EditText messageEditText;
    private Button checkButton;

    // Define a set of spam keywords
    private static final Set<String> spamKeywords = new HashSet<>(Arrays.asList(
            "pharmacy", "viagra", "lottery", "free", "win", "$$$"));

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Initialize UI components
        messageEditText = findViewById(R.id.messageEditText);
        checkButton = findViewById(R.id.checkButton);

        // Set a click listener for the checkButton
        checkButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // Check the message for spam keywords
                String userMessage = messageEditText.getText().toString();
                if (containsSpamKeywords(userMessage)) {
                    // Message contains spam, block it
                    blockMessage();
                } else {
                    // Message is clean, proceed with processing or display
                    displayMessage(userMessage);
                }
            }
        });
    }

    // Check if a message contains spam keywords
    private boolean containsSpamKeywords(String message) {
        // Convert the message to lowercase for case-insensitive matching
        String lowercaseMessage = message.toLowerCase();

        // Check if any of the spam keywords are present in the message
        for (String keyword : spamKeywords) {
            if (lowercaseMessage.contains(keyword)) {
                return true; // Message contains a spam keyword
            }
        }

        return false; // Message is clean
    }

    // Block the message (in a real-world scenario, you might want to take appropriate actions)
    private void blockMessage() {
        Toast.makeText(this, "This message contains spam keywords and has been blocked.", Toast.LENGTH_SHORT).show();
        // Optionally, you might want to log or report the blocked message for analysis.
    }

    // Display the message (in a real-world scenario, you might want to handle this differently)
    private void displayMessage(String message) {
        Toast.makeText(this, "Message: " + message, Toast.LENGTH_SHORT).show();
        // Optionally, you might want to display the message in a TextView or handle it differently.
    }
}
